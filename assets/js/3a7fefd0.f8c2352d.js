"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3529],{130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"ecosystem-html-web-components","title":"single-spa-html","description":"single-spa-html is a helper library for mounting raw HTML and web components as","source":"@site/versioned_docs/version-5.x/ecosystem-html-web-components.md","sourceDirName":".","slug":"/ecosystem-html-web-components","permalink":"/docs/5.x/ecosystem-html-web-components","draft":false,"unlisted":false,"editUrl":"https://github.com/single-spa/single-spa.js.org/blob/master/website/versioned_docs/version-5.x/ecosystem-html-web-components.md","tags":[],"version":"5.x","frontMatter":{"id":"ecosystem-html-web-components","title":"single-spa-html","sidebar_label":"HTML / Web Components"},"sidebar":"docs","previous":{"title":"Backbone","permalink":"/docs/5.x/ecosystem-backbone"},"next":{"title":"Leaked globals","permalink":"/docs/5.x/ecosystem-leaked-globals"}}');var l=t(4848),i=t(8453);const o={id:"ecosystem-html-web-components",title:"single-spa-html",sidebar_label:"HTML / Web Components"},a=void 0,c={},r=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Via npm",id:"via-npm",level:3},{value:"Via cdn",id:"via-cdn",level:3},{value:"API / Options",id:"api--options",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/single-spa/single-spa-html",children:"single-spa-html"})," is a helper library for mounting raw HTML and web components as\nsingle-spa applications or parcels."]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"npm install --save single-spa-html\n\n# or\nyarn add single-spa-html\n"})}),"\n",(0,l.jsx)(n.p,{children:"Alternatively, you can use single-spa-html from a CDN as a global variable:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:'<script src="https://cdn.jsdelivr.net/npm/single-spa-html"><\/script>\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Note that you might want to lock down the package to a specific version. See ",(0,l.jsx)(n.a,{href:"https://cdn.jsdelivr.net/npm/single-spa-html",children:"here"})," for\nhow to do that."]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h3,{id:"via-npm",children:"Via npm"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'import singleSpaHtml from "single-spa-html";\n\nconst htmlLifecycles = singleSpaHtml({\n  template: "<x-my-web-component></x-my-web-component>",\n});\n\nexport const bootstrap = htmlLifecycles.bootstrap;\nexport const mount = htmlLifecycles.mount;\nexport const unmount = htmlLifecycles.unmount;\n'})}),"\n",(0,l.jsx)(n.h3,{id:"via-cdn",children:"Via cdn"}),"\n",(0,l.jsx)(n.p,{children:"Example usage when installed via CDN:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const webComponentApp = window.singleSpaHtml.default({\n  template: (props) =>\n    `<x-my-web-component attr="${props.attr}"></x-my-web-component>`,\n});\n\nsingleSpa.registerApplication({\n  name: "name",\n  app: webComponentApp,\n  activeWhen: () => true,\n});\n'})}),"\n",(0,l.jsx)(n.h2,{id:"api--options",children:"API / Options"}),"\n",(0,l.jsx)(n.p,{children:"single-spa-html is called with an object that has the following properties:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"template"})," (required): An HTML string or a function that returns a string or promise that resolves a string. The function will be called with the single-spa custom props. The returned string is injected into the DOM during the single-spa mount lifecycle."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"domElementGetter"})," (optional): A function that is given the single-spa props and returns the dom element container into which the HTML will be injected. If omitted,\na default implementation is provided that wraps the template in a ",(0,l.jsx)(n.code,{children:"<div>"})," that is appended to ",(0,l.jsx)(n.code,{children:"document.body"}),"."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const l={},i=s.createContext(l);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);