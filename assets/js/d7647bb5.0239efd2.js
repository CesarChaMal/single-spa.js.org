"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2862],{1081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"layout-overview","title":"Layout Engine","description":"Introduction","source":"@site/versioned_docs/version-5.x/layout-overview.md","sourceDirName":".","slug":"/layout-overview","permalink":"/docs/5.x/layout-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/single-spa/single-spa.js.org/blob/master/website/versioned_docs/version-5.x/layout-overview.md","tags":[],"version":"5.x","frontMatter":{"id":"layout-overview","title":"Layout Engine","sidebar_label":"Overview"},"sidebar":"docs","previous":{"title":"E2E testing","permalink":"/docs/5.x/testing/e2e"},"next":{"title":"Layout Definition","permalink":"/docs/5.x/layout-definition"}}');var i=t(4848),s=t(8453);const a={id:"layout-overview",title:"Layout Engine",sidebar_label:"Overview"},r=void 0,l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Browser / NodeJS support",id:"browser--nodejs-support",level:3},{value:"Requirements",id:"requirements",level:3},{value:"Basic usage",id:"basic-usage",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/single-spa/single-spa-layout/",children:"Github repository"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"single-spa-layout"})," npm package is an optional add-on to single-spa. The layout engine provides a routing API that controls your top level routes, applications, and dom elements. Using single-spa-layout makes it easier to accomplish the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"DOM placement and ordering of applications."}),"\n",(0,i.jsx)(n.li,{children:"Loading UIs when applications are downloaded."}),"\n",(0,i.jsx)(n.li,{children:"Default routes for Not Found / 404 pages."}),"\n",(0,i.jsx)(n.li,{children:"Transitions between routes (implementation pending)."}),"\n",(0,i.jsx)(n.li,{children:"Server side rendering of single-spa applications"}),"\n",(0,i.jsx)(n.li,{children:"Error pages"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In the browser, the layout engine performs two major tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Generate ",(0,i.jsx)(n.a,{href:"/docs/api/#configuration-object",children:"single-spa registration config"})," from an HTML Element and/or JSON object."]}),"\n",(0,i.jsxs)(n.li,{children:["Listen to ",(0,i.jsx)(n.a,{href:"/docs/api/#events",children:"routing events"})," to ensure that all DOM elements are laid out correctly before the single-spa applications are mounted."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"On the server, the layout engine performs two tasks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Construct a ",(0,i.jsx)(n.a,{href:"/docs/layout-api#constructserverlayout",children:"server layout object"})," from an HTML template."]}),"\n",(0,i.jsx)(n.li,{children:"Send an HTML document (HTTP response headers and body) to the browser, based on the server layout object and current route."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"single-spa-layout"})," is 3.2kb gzipped (9kb ungzipped)."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["You only need to install the layout engine into your ",(0,i.jsx)(n.a,{href:"/docs/configuration/",children:"root config"})," (not in any other application)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npm install --save single-spa-layout\n\n# or\nyarn add single-spa-layout\n"})}),"\n",(0,i.jsx)(n.h3,{id:"browser--nodejs-support",children:"Browser / NodeJS support"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"single-spa-layout"})," works in all browsers supported by single-spa, including IE11. On the server, all NodeJS versions that support ESM are supported."]}),"\n",(0,i.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.p,{children:["You must use single-spa@>=5.4.0 in order for the layout engine to work. Additionally, you may not provide custom ",(0,i.jsx)(n.code,{children:"domElementGetter"})," functions for any of your single-spa applications, as those override the configuration within single-spa-layout."]}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,i.jsxs)(n.p,{children:["In your root html file, add a ",(0,i.jsx)(n.code,{children:"<template>"})," element to the head. It should have a ",(0,i.jsx)(n.code,{children:"<single-spa-router>"})," element that contains ",(0,i.jsx)(n.code,{children:"<route>"})," elements, ",(0,i.jsx)(n.code,{children:"<application>"})," elements, and any other dom elements:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    <template id="single-spa-layout">\n      <single-spa-router>\n        <nav class="topnav">\n          <application name="@organization/nav"></application>\n        </nav>\n        <div class="main-content">\n          <route path="settings">\n            <application name="@organization/settings"></application>\n          </route>\n          <route path="clients">\n            <application name="@organization/clients"></application>\n          </route>\n        </div>\n        <footer>\n          <application name="@organization/footer"></application>\n        </footer>\n      </single-spa-router>\n    </template>\n  </head>\n</html>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Then inside of your root-config's JavaScript code, add the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import { registerApplication, start } from "single-spa";\nimport {\n  constructApplications,\n  constructRoutes,\n  constructLayoutEngine,\n} from "single-spa-layout";\n\nconst routes = constructRoutes(document.querySelector("#single-spa-layout"));\nconst applications = constructApplications({\n  routes,\n  loadApp({ name }) {\n    return System.import(name);\n  },\n});\nconst layoutEngine = constructLayoutEngine({ routes, applications });\n\napplications.forEach(registerApplication);\nstart();\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);