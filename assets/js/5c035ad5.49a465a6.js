"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2879],{4016:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ecosystem","title":"The single-spa ecosystem","description":"The single-spa ecosystem is quickly growing to support as many frameworks and build tools as possible.","source":"@site/versioned_docs/version-4.x/ecosystem.md","sourceDirName":".","slug":"/ecosystem","permalink":"/docs/4.x/ecosystem","draft":false,"unlisted":false,"editUrl":"https://github.com/single-spa/single-spa.js.org/blob/master/website/versioned_docs/version-4.x/ecosystem.md","tags":[],"version":"4.x","frontMatter":{"id":"ecosystem","title":"The single-spa ecosystem","sidebar_label":"Overview"},"sidebar":"docs","previous":{"title":"Parcels API","permalink":"/docs/4.x/parcels-api"},"next":{"title":"React","permalink":"/docs/4.x/ecosystem-react"}}');var t=s(4848),r=s(8453);const a={id:"ecosystem",title:"The single-spa ecosystem",sidebar_label:"Overview"},o=void 0,l={},c=[{value:"Help for frameworks",id:"help-for-frameworks",level:2},{value:"Webpack 2+",id:"webpack-2",level:2},{value:"SystemJS",id:"systemjs",level:2},{value:"Webpack 1",id:"webpack-1",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The single-spa ecosystem is quickly growing to support as many frameworks and build tools as possible."}),"\n",(0,t.jsx)(n.h2,{id:"help-for-frameworks",children:"Help for frameworks"}),"\n",(0,t.jsx)(n.p,{children:"There is a growing number of projects that help you bootstrap, mount,\nand unmount your applications that are written with popular frameworks. Feel free\nto contribute to this list with your own project:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-react",children:"single-spa-react"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-vue",children:"single-spa-vue"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-angular",children:"single-spa-angular"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-angularjs",children:"single-spa-angularjs"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-cycle",children:"single-spa-cycle"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-ember",children:"single-spa-ember"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-inferno",children:"single-spa-inferno"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-preact",children:"single-spa-preact"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-svelte",children:"single-spa-svelte"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-riot",children:"single-spa-riot"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/4.x/ecosystem-backbone",children:"single-spa-backbone"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"webpack-2",children:"Webpack 2+"}),"\n",(0,t.jsxs)(n.p,{children:["With webpack 2+, we can take advantage of its support for ",(0,t.jsx)(n.a,{href:"https://webpack.js.org/guides/code-splitting/",children:"code splitting"})," with ",(0,t.jsx)(n.a,{href:"https://webpack.js.org/api/module-methods/#import",children:"import()"}),"\nin order to easily lazy-load registered applications when they are needed. When registering\nregistered applications from inside of your single spa config, try the following for your\n",(0,t.jsx)(n.a,{href:"configuration#loading-function",children:"loading functions"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { registerApplication } from "single-spa";\n\nregisterApplication("app-name", () => import("./my-app.js"), activeWhen);\n\nfunction activeWhen() {\n  return window.location.pathname.indexOf("/my-app") === 0;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"systemjs",children:"SystemJS"}),"\n",(0,t.jsxs)(n.p,{children:["Since SystemJS is a Promise-based ",(0,t.jsx)(n.a,{href:"https://whatwg.github.io/loader",children:"loader"}),", the way to\nlazy load your registered applications is straightforward:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { registerApplication } from "single-spa";\n\n// Import the registered application with a SystemJS.import call\nregisterApplication(\n  "app-name-1",\n  () => SystemJS.import("./my-app.js"),\n  activeWhen,\n);\n\n// Alternatively, use the more out-of-date System.import (instead of SystemJS.import)\nregisterApplication(\n  "app-name-2",\n  () => System.import("./my-other-app.js"),\n  activeWhen,\n);\n\nfunction activeWhen() {\n  return window.location.pathname.indexOf("/my-app") === 0;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"webpack-1",children:"Webpack 1"}),"\n",(0,t.jsx)(n.p,{children:"With webpack 1, there is no support for Promise-based code splitting. Instead, we have to either wrap\na require.ensure in a Promise, or just give up on lazy loading completely."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { registerApplication } from "single-spa";\nimport app1 from "./app1"; // Not lazy loading with code splitting :(\n\n// Giving up on lazy loading and code splitting :(\nregisterApplication("app-1", () => Promise.resolve(app1), activeWhen);\n\n// Still doing code splitting! But verbose :(\nregisterApplication("app-2", app2InPromise, activeWhen);\n\n/* Unfortunately, this logic cannot be abstracted into a generic\n * function that handles wrapping require.ensure in a promise for\n * any dynamically imported module. This is because webpack needs to\n * be able to statically analyze the code and find all of the require.ensure\n * calls at build-time, so you can\'t pass variables into require.ensure.\n */\nfunction app2InPromise() {\n  return new Promise((resolve, reject) => {\n    require.ensure(["./app-2.js"], (require) => {\n      try {\n        resolve(require("./app-2.js"));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\n\nfunction activeWhen() {\n  return window.location.pathname.indexOf("/my-app") === 0;\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);